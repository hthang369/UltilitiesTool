using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
using SQLAppLib;

namespace SQLQQ
{
    public partial class frmMain : Form
    {
        //#region Kết nối SQL

        //public static SqlConnection sqlconn;
        public static String strServer_Public;
        public static String strDatabase_Public;
        public static String strUserName_Public;
        public static String strPassWord_Public;
        private string section = "SqlServer";
        private string serverCnt = "ServerCount";
        private string _serverDesc = "Descreiption";
        private string _serverName = "Server";
        private string _serverUID = "UID";
        private string _serverPWD = "PWD";
        private string strFileName = Application.StartupPath + "\\config.ini";
        public String _strQuery_Error;
        frmSearch _frmSearch;
        //public static SqlDataAdapter da;
        //
        ////public frmMain frmMain;

        //#region Property

        //frmMain _frmMain;

        //public String _strServer_Public
        //{
        //    get
        //    {
        //        return strServer_Public;
        //    }
        //    set
        //    {
        //        strServer_Public = value;
        //    }
        //}

        //public String _strDatabase_Public
        //{
        //    get
        //    {
        //        return strDatabase_Public;
        //    }
        //    set
        //    {
        //        strDatabase_Public = value;
        //    }
        //}

        //public String _strQuery_Error
        //{
        //    get
        //    {
        //        return strQuery_Error;
        //    }
        //    set
        //    {
        //        strQuery_Error = value;
        //    }
        //}


        ////public frmMain _frmMain
        ////{
        ////    get
        ////    {
        ////        return frmMain;
        ////    }
        ////    set
        ////    {
        ////        frmMain = value;
        ////    }
        ////}

        //#endregion

        //public void KetNoiCSDL(string svrname, string dbname, bool mode, string user, string pass)
        //{
        //    string strconn;
        //    if (mode == true)
        //    {
        //        strconn = String.Format("data source={0};database={1}Integrated Security=true", svrname, dbname);
        //    }
        //    else
        //    {
        //        strconn = String.Format("data source={0};database={1};uid={2};pwd={3}", svrname, dbname, user, pass);
        //    }
        //    sqlconn = new SqlConnection(strconn);

        //    try
        //    {
        //        sqlconn.Open();
        //    }
        //    catch
        //    {
        //        MessageBox.Show("Connect Server Fail! - Please check Information");
        //    }
        //}

        //public DataSet GetDataSet(string strsql)
        //{
        //    KetNoiCSDL(strServer_Public, strDatabase_Public, false, "sa", "gmc$#@!1234zaqwsx");
        //    if (sqlconn.State.ToString() == "Open")
        //    {
        //        try
        //        {
        //            var sqlcom = new SqlCommand(strsql, sqlconn);
        //            sqlcom.ExecuteNonQuery();
        //        }
        //        catch(Exception ex)
        //        {
        //            strQuery_Error = ex.Message.ToString();
        //        }

        //        da = new SqlDataAdapter(strsql, sqlconn);
        //        var ds = new DataSet();
        //        da.Fill(ds);

        //        return ds;
        //    }
        //    else
        //        return null;
        //}

        //public DataTable GetDataTable(string strsql)
        //{
        //    KetNoiCSDL(strServer_Public, strDatabase_Public, false, "sa", "gmc$#@!1234zaqwsx");
        //    if (sqlconn.State.ToString() == "Open")
        //    {
        //        try
        //        {
        //            var sqlcom = new SqlCommand(strsql, sqlconn);
        //            sqlcom.ExecuteNonQuery();
        //        }
        //        catch (Exception ex)
        //        { 
        //            strQuery_Error = ex.Message.ToString(); 
        //        }

        //        da = new SqlDataAdapter(strsql, sqlconn);
        //        var ds = new DataSet();

        //        try
        //        {
        //            da.Fill(ds);
        //        }
        //        catch { return null; }

        //        return ds.Tables[0];
        //    }
        //    else
        //        return null;
        //}

        //public DataInfo GetObjectByIDAndTableName(int iID, String strTableName)
        //{
        //    SQLQQ.DataInfo obj = new SQLQQ.DataInfo();
        //    String StrColumnNameByID = strTableName.Substring(0, strTableName.Length - 1) + "ID";
        //    String StrColumnNameByNo = strTableName.Substring(0, strTableName.Length - 1) + "No";
        //    String StrColumnNameByName = strTableName.Substring(0, strTableName.Length - 1) + "Name";
        //    String StrColumnNameByDate = strTableName.Substring(0, strTableName.Length - 1) + "Date";

        //    String strsql = String.Format(@"select * from {0} Where {1} = {2}", strTableName, StrColumnNameByID, iID);

        //    KetNoiCSDL(strServer_Public, strDatabase_Public, false, "sa", "gmc$#@!1234zaqwsx");
        //    if (sqlconn.State.ToString() == "Open")
        //    {
        //        try
        //        {
        //            var sqlcom = new SqlCommand(strsql, sqlconn);
        //            sqlcom.ExecuteNonQuery();
        //        }
        //        catch (Exception ex)
        //        {
        //            strQuery_Error = ex.Message.ToString();
        //        }

        //        da = new SqlDataAdapter(strsql, sqlconn);
        //        var ds = new DataSet();

        //        try
        //        {
        //            da.Fill(ds);

        //            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
        //            {
        //                try
        //                {
        //                    obj.strNo = ds.Tables[0].Rows[0][StrColumnNameByNo].ToString();
        //                    obj.strName = ds.Tables[0].Rows[0][StrColumnNameByName].ToString();
        //                    obj.dtDate = Convert.ToDateTime(ds.Tables[0].Rows[0][StrColumnNameByDate]);
        //                }
        //                catch { }
        //            }

        //            return obj;
        //        }
        //        catch { return null; }
        //    }
        //    else
        //        return null;
        //}

        //#endregion

        public frmMain()
        {
            InitializeComponent();
        }

        private void frmMain_Load(object sender, EventArgs e)
        {
            _frmSearch = new frmSearch();

            //frmMain = new frmMain();
            // Fill out data in Combobox Sever
            ReadFromFileTextForServer(cbbServer);

            // Login Server and Database from Login Oldest.
            ReadFromFileTextForLogin();

            //notifyIcon1.Click += new EventHandler(notifyIcon1_Click);
            //this.Resize += new EventHandler(frmMain_Resize);

            cbbServer.SelectedIndexChanged += new EventHandler(cbbServer_SelectedIndexChanged);
            cbbDatabase.SelectedIndexChanged += new EventHandler(cbbDatabase_SelectedIndexChanged);
            cbbDatabase.Click += new EventHandler(cbbDatabase_Click);

            //frmMain.FormClosing += new FormClosingEventHandler(_frmMain_FormClosing);
        }

        void _frmMain_FormClosing(object sender, FormClosingEventArgs e)
        {
            this.Hide();
            e.Cancel = true;
        }

        private void menutripSupport_Click(object sender, EventArgs e)
        {
            //frmSupport _frmSupport = new frmSupport();
            //_frmSupport.ShowDialog();
        }

        #region Event

        //void frmMain_Resize(object sender, EventArgs e)
        //{
        //    // Nếu Form đang Minimize thì ẩn luôn Form
        //    if (FormWindowState.Minimized == WindowState)
        //        Hide();
        //}

        //void notifyIcon1_Click(object sender, EventArgs e)
        //{
        //    Show();
        //    WindowState = FormWindowState.Normal;
        //}

        private void cbbDatabase_SelectedIndexChanged(object sender, EventArgs e)
        {
            strDatabase_Public = cbbDatabase.Text;
            if (strDatabase_Public != "")
                SQLDBUtil.ChangeDatabase(strDatabase_Public);
        }

        private void cbbServer_SelectedIndexChanged(object sender, EventArgs e)
        {
            cbbDatabase.Items.Clear();
            cbbDatabase.Text = string.Empty;
            cbbDatabase.Refresh();

            ReadFromFileTextForLogin(cbbServer.SelectedIndex);
            GetAllDatabaseByServer();
        }

        void cbbDatabase_Click(object sender, EventArgs e)
        {
            //cbbDatabase.Items.Clear();
            //cbbDatabase.Text = string.Empty;
            //cbbDatabase.Refresh();

            //strServer_Public = cbbServer.Text;

            //strDatabase_Public = "";
            //KetNoiCSDL(strServer_Public, strDatabase_Public, false, "sa", "gmc$#@!1234zaqwsx");

            //if (sqlconn.State.ToString() == "Open")
            //    GetAllDatabaseByServer();
        }

        private void frmMain_KeyDown(object sender, KeyEventArgs e)
        {
            if (cbbDatabase.Text != "" && cbbServer.Text != "")
            {
                #region Key Ctr 1 - Show all module

                if (e.Control && e.KeyCode == Keys.D1)
                {
                    frmData _frmSearch = new frmData(this);


                    //String strQuery_AllModule = String.Format(@"    Select *
                    //                                                From
                    //                                                (
                    //                                                SELECT STModules.STModuleName,STModuleDescriptions.STModuleDescriptionDescription
                    //                                                FROM dbo.STModules INNER JOIN dbo.STModuleDescriptions ON STModuleDescriptions.STModuleID = STModules.STModuleID
                    //                                                ) AS SearchModule
                    //                           ");

                    DataTable dtModule = Util.FunctionList.FindModule();
                    if (dtModule != null && dtModule.Rows.Count > 0)
                    {
                        //_frmSearch._strQuery_RecentData = strQuery_AllModule;
                        _frmSearch._strTableName_SearchPublic = "STModules";
                        _frmSearch._dgrSearch.DataSource = dtModule;
                        _frmSearch._dgrSearch.Refresh();
                    }

                    this.Hide();
                    _frmSearch.ShowDialog();
                    _frmSearch.StartPosition = FormStartPosition.CenterParent;

                }

                #endregion

                #region Key Alt + 1 - Search data By Table

                if (e.Alt && e.KeyCode == Keys.D1)
                {
                    _frmSearch = new frmSearch(this);

                    ShowAllTableNameByComboBox();
                    //this.Size =  MinimumSize;
                    this.Hide();
                    ReadFromFileText(Application.StartupPath + "\\HistoryData.txt", "TableSearch");
                    _frmSearch.ShowDialog();
                }

                #endregion

                #region Ctr + Q SQL Execute

                frmQuery_SQL _frmQuery_SQL = new frmQuery_SQL();

                if (e.Control && e.KeyCode == Keys.Q)
                {
                    _frmQuery_SQL.Show();
                }

                #endregion

                #region Ctrl + F
                if (e.Control && e.KeyCode == Keys.F)
                {
                    frmData _frmSearch = new frmData(this);
                    DataTable dtModule = Util.FunctionList.FindModule();
                }
                #endregion
            }

            #region Key Esc

            if (e.KeyCode == (Keys.Back | Keys.RButton | Keys.LButton | Keys.ShiftKey))
            {
                DialogResult dr = MessageBox.Show("Are you quit!", "Warning!", MessageBoxButtons.OKCancel);
                if (dr == DialogResult.OK)
                {
                    CreateLogFile_Login();
                    Application.Exit();
                }
            }

            #endregion

            #region Show Main

            //if (e.Control && e.KeyCode == Keys.M)
            //{
            //    frmMain.Show();
            //}

            #endregion
        }

        #endregion

        #region Functions

        public void ReadFromFileTextForServer(ComboBox cbbData)
        {
            try
            {
                #region Code cũ
                //string strServer;
                //System.IO.StreamReader docFile = new System.IO.StreamReader(Application.StartupPath + "\\SQL.txt");
                //strServer = docFile.ReadLine();
                //while (strServer != null && strServer != "")
                //{
                //    cbbData.Items.Add(strServer);
                //    strServer = docFile.ReadLine();
                //}
                //docFile.Close();
                //docFile.Dispose();
                #endregion
                #region Code mới lấy thông tin từ file config
                string count = SQLApp.GetIniFile(strFileName, section, serverCnt);
                cbbData.Items.Clear();
                for (int i = 0; i < Convert.ToInt32(count); i++)
                {
                    cbbData.Items.Add(SQLApp.GetIniFile(strFileName, section, _serverDesc + (i + 1)));
                }
                #endregion
            }
            catch
            {

            }
        }

        private void ReadFromFileTextForLogin(int idx = 0)
        {
            try
            {
                cbbServer.SelectedIndex = idx;
                strServer_Public = SQLApp.GetIniFile(strFileName, section, _serverName + (cbbServer.SelectedIndex + 1));
                strUserName_Public = SQLApp.GetIniFile(strFileName, section, _serverUID + (cbbServer.SelectedIndex + 1));
                strPassWord_Public = SQLApp.GetIniFile(strFileName, section, _serverPWD + (cbbServer.SelectedIndex + 1));

                SQLDBUtil.SwitchConnection(strServer_Public, "", strUserName_Public, strPassWord_Public);
                GetAllDatabaseByServer();

            }
            catch
            {

            }
        }

        public void ReadFromFileText(String strPathText,String strHistoryType)
        {
            try
            {
                #region Code cũ
                string strServer;
                System.IO.StreamReader docFile = new System.IO.StreamReader(strPathText);

                String strLine= docFile.ReadLine();
                while (strLine != null && strLine != "")
                {
                    String[] strPlit = strLine.Split('=');

                    #region  Data Search - History
                    if (strPlit[0] == strHistoryType && strPlit.Length > 1)
                    {
                        _frmSearch._cbbSearchData.Text = strPlit[1].ToString();
                    }
                    #endregion
                   
                    strLine = docFile.ReadLine();
                }

                strServer = docFile.ReadLine();
                
                docFile.Close();
                docFile.Dispose();
                #endregion
            }
            catch
            {

            }
        }

        private void CreateLogFile_Login()
        {
            String strPathFile = Application.StartupPath + "\\Login.txt";

            try
            {
                if (File.Exists(strPathFile))
                {
                    File.Delete(strPathFile);
                }

                FileStream fs = new FileStream(strPathFile, FileMode.Create);//Tạo file mới tên là test.txt
                StreamWriter sWriter = new StreamWriter(fs, Encoding.UTF8);//fs là 1 FileStream 
                TextWriter tw = new StreamWriter(fs);

                tw.WriteLine(@"ServerName={0}", cbbServer.Text);
                tw.WriteLine(@"Database={0}", cbbDatabase.Text);

                tw.Close();
            }
            catch
            { }
        }

        private void GetAllDatabaseByServer()
        {
            //String strQueryDB = @"  SELECT name
            //                            FROM sys.databases
            //                            WHERE name != 'master' AND name != 'tempdb' AND name != 'model' AND name != 'msdb'";

            cbbDatabase.Items.Clear();
            DataSet ds = SQLDBUtil.GetAllDatabases();
            //DataTable dtDatabase = ds.Tables[0];
            if (ds != null && ds.Tables.Count > 0 && ds.Tables[0].Rows.Count > 0)
            {
                foreach (DataRow dr in ds.Tables[0].Rows)
                {
                    cbbDatabase.Items.Add(dr[0].ToString());
                }
            }
        }
        public void ShowAllTableNameByComboBox()
        {

        }

        public void UpdateData(DataGridView dgrData)
        {
            for (int i = 0; i < dgrData.Columns.Count - 1; i++)
            {
                String strColumnName = dgrData.Columns[i].Name.ToString();
                if (strColumnName.Contains("ID"))
                {
                    String strPrimaryKey = strColumnName;
                    String strTableName = strPrimaryKey.Replace("ID", "s");
                    String strDataUpdate = dgrData.CurrentCell.Value.ToString();
                    String strColumnUpdate = dgrData.CurrentCell.OwningColumn.Name.ToString();
                    int ID = (int)dgrData.CurrentRow.Cells[strPrimaryKey].Value;

                    String strQueryUpdate = String.Format(@"
                                                            UPDATE {0}
                                                            SET    {1} = '{2}'
                                                            WHERE  {3} =  {4}
                                                          ", strTableName, strColumnUpdate, strDataUpdate, strPrimaryKey, dgrData.CurrentRow.Cells[strPrimaryKey].Value.ToString());


                    try
                    {
                        //SqlCommand cmd = new SqlCommand(strQueryUpdate, sqlconn);
                        //cmd.ExecuteNonQuery();
                        SQLDBUtil.ExecuteNonQuery(strQueryUpdate);
                    }
                    catch
                    { }
                }
            }
        }

        public void ShowWaiting()
        {
            frmWaiting _frmWaiting = new frmWaiting();
            _frmWaiting.ShowDialog();
        }

        public void CloseWaiting()
        {
            frmWaiting _frmWaiting = new frmWaiting();
            _frmWaiting.Close();
        }

        #endregion

        private void sQLToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

        private void addToolStripMenuItem_Click(object sender, EventArgs e)
        {

        }

    }

    //public class DataInfo
    //{
    //    public String strNo;
    //    public String strName;
    //    public DateTime dtDate;
    //}

}
