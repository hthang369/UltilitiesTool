DECLARE @table_name SYSNAME
SET @table_name = '@TableName@'

IF OBJECT_ID('tempdb..#systable_columns') IS NOT NULL
	DROP TABLE #systable_columns
SELECT t.name AS TableName, c.name as ColumnName, 
		'_' + LOWER(LEFT(c.name,1)) + RIGHT(c.name, LEN(c.name) - 1) as ColName, tp.name as ColumnType, c.is_nullable as ColumnIsNull
INTO #systable_columns
FROM sys.tables t
JOIN sys.columns c on t.object_id = c.object_id
JOIN sys.types tp on c.user_type_id = tp.user_type_id
WHERE t.name = @table_name

select 'using System;' + char(13) +
		'using System.Text;' + char(13) +
		'using System.Collections.Generic;' + char(13) +
		'using ExpertLib;' + char(13) +
		'namespace ExpertERP.BusinessEntities' + char(13) +
		'{' + char(13) +
		char(9) + '#region ' + @table_name + char(13) +
		char(9) + '//-----------------------------------------------------------' + char(13) +
		char(9) + '//Generated By: SQLDBTool @Version@' + char(13) +
		char(9) + '//Class: ' + @table_name + 'Info' + char(13) +
		char(9) + '//Created Date: @CreatedDate@' + char(13) +
		char(9) + '//-----------------------------------------------------------' + char(13) +
		char(13)+
		char(9) + 'public class ' + @table_name + 'Info : BusinessObject' + char(13) +
		char(9) + '{' + char(13) +
		char(9) + char(9) + 'public ' + @table_name + 'Info()' + char(13) +
		char(9) + char(9) + '{' + char(13) +
		char(9) + char(9) + '}' + char(13) +
		char(9) + char(9) + '#region Variables' + char(13) +
		(STUFF((SELECT char(9) + char(9) + char(9) + 'protected ' + 
			CASE WHEN ColumnType in('float','double','decimal')
					Then 'double'
				WHEN ColumnType in('datetime','datetime2','date','time','time2','datetimeoffset')
					then case when ColumnIsNull = 0 then 'DateTime' else 'Nullable<DateTime>' end
				WHEN ColumnType = 'int'
					then ColumnType
				WHEN ColumnType = 'bit'
					then 'bool'
				ELSE 'String'
			END + ' ' + ColName + 
			case when ColumnType in('varchar','nvarchar','text','ntext','char','nchar') AND ColumnIsNull = 1
				then ' = String.Empty'
			else '' end + 
			';' + char(13)
			
		FROM #systable_columns FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 0, '')) +
		char(9) + char(9) + '#endregion' + char(13) +
		char(13)+
		char(9) + char(9) + '#region Public properties' + char(13) +
		(STUFF((SELECT char(9) + char(9) + char(9) + 'public ' + 
			CASE WHEN ColumnType in('float','double','decimal')
					Then 'double'
				WHEN ColumnType in('datetime','datetime2','date','time','time2','datetimeoffset')
					then 'DateTime'
				WHEN ColumnType = 'int'
					then ColumnType
				ELSE 'String'
			END + ' ' + ColumnName + char(13) +
			char(9) + char(9) + char(9) + '{' + char(13) +
			char(9) + char(9) + char(9) + char(9) + 'get { return ' + ColName + '; }' + char(13) +
			char(9) + char(9) + char(9) + char(9) + 'set' + char(13) +
			char(9) + char(9) + char(9) + char(9) + '{' + char(13) +
			char(9) + char(9) + char(9) + char(9) + char(9) + 'if (value != this.' + ColName + ')' + char(13) +
			char(9) + char(9) + char(9) + char(9) + char(9) + '{' + char(13) +
			char(9) + char(9) + char(9) + char(9) + char(9) + char(9) + ColName + ' = value;' + char(13) +
			char(9) + char(9) + char(9) + char(9) + char(9) + char(9) + 'NotifyChanged("' + ColumnName + '");' + char(13) +
			char(9) + char(9) + char(9) + char(9) + char(9) + '}' + char(13) +
			char(9) + char(9) + char(9) + char(9) + '}' + char(13) +
			char(9) + char(9) + char(9) + '}' + char(13)
		FROM #systable_columns FOR XML PATH(''), TYPE).value('.', 'NVARCHAR(MAX)'), 1, 0, '')) +
		char(9) + char(9) + '#endregion' + char(13) +
		char(9) + '}' + char(13) +
		char(9) + '#endregion' + char(13) + '}'